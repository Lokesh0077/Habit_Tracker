{"ast":null,"code":"var _jsxFileName = \"C:\\\\lokesh\\\\habit\\\\habit-tracker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport HabitForm from './components/HabitForm';\nimport HabitList from './components/HabitList';\nimport HabitHeatmap from './components/HabitHeatmap';\nimport HabitCompletionChart from './components/HabitCompletionChart';\nimport HabitTrendChart from './components/HabitTrendChart';\nimport HabitPieChart from './components/HabitPieChart';\nimport ThemeToggle from './components/ThemeToggle';\nimport TimeRangeSelector from './components/TimeRangeSelector';\nimport AchievementBadges from './components/AchievementBadges';\nimport StatisticsDashboard from './components/StatisticsDashboard';\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [habits, setHabits] = useState([]); // State to hold the list of habits\n  const [editingHabit, setEditingHabit] = useState(null); // State to hold the habit being edited\n  const [selectedTimeRange, setSelectedTimeRange] = useState('30days'); // State to track selected time range\n  const [activeTab, setActiveTab] = useState('habits'); // New state for tab management\n\n  // Effect to load habits from local storage on initial mount\n  useEffect(() => {\n    const savedHabits = localStorage.getItem('habits');\n    if (savedHabits) {\n      setHabits(JSON.parse(savedHabits));\n    }\n  }, []); // The empty dependency array ensures this effect runs only once on mount\n\n  // Effect to save habits to local storage whenever the 'habits' state changes\n  useEffect(() => {\n    localStorage.setItem('habits', JSON.stringify(habits));\n  }, [habits]); // This effect runs whenever the 'habits' state changes\n\n  // Effect to schedule browser notifications\n  useEffect(() => {\n    const notificationTimers = {}; // To store timer IDs for cleanup\n\n    habits.forEach(habit => {\n      if (habit.reminderTime) {\n        const [hours, minutes] = habit.reminderTime.split(':').map(Number);\n        const now = new Date();\n        const reminderDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), hours, minutes, 0);\n\n        // If the reminder time for today has already passed, schedule for tomorrow\n        if (reminderDate.getTime() < now.getTime()) {\n          reminderDate.setDate(reminderDate.getDate() + 1);\n        }\n        const timeUntilReminder = reminderDate.getTime() - now.getTime();\n        if (timeUntilReminder >= 0) {\n          const timerId = setTimeout(() => {\n            // Display the notification\n            if (Notification.permission === 'granted') {\n              new Notification(`Habit Reminder: ${habit.name}`, {\n                body: `Time to complete your habit: ${habit.name}`\n                // You can add more options here, like an icon\n                // icon: '/path/to/icon.png'\n              });\n            }\n          }, timeUntilReminder);\n\n          // Store the timer ID for cleanup\n          notificationTimers[habit.id] = timerId;\n        }\n      }\n    });\n\n    // Cleanup function to clear timers\n    return () => {\n      Object.values(notificationTimers).forEach(timerId => {\n        clearTimeout(timerId);\n      });\n    };\n  }, [habits]); // This effect runs whenever the 'habits' state changes\n\n  // Function to add a new habit to the state\n  const addHabit = habit => {\n    setHabits([...habits, {\n      id: Date.now(),\n      ...habit,\n      completed: false,\n      completionDates: [],\n      reminderTime: null\n    }]); // Added reminderTime\n  };\n  const toggleHabitComplete = id => {\n    setHabits(habits.map(habit => {\n      if (habit.id === id) {\n        const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format\n        const updatedCompletionDates = habit.completed ? habit.completionDates.filter(date => date !== today) // Remove today if marking incomplete\n        : [...habit.completionDates, today]; // Add today if marking complete\n\n        return {\n          ...habit,\n          completed: !habit.completed,\n          completionDates: updatedCompletionDates\n        };\n      }\n      return habit;\n    }));\n  };\n  const deleteHabit = id => {\n    setHabits(habits.filter(habit => habit.id !== id));\n  };\n  const handleEditHabitSubmit = updatedHabit => {\n    setHabits(habits.map(habit => {\n      if (habit.id === updatedHabit.id) {\n        return {\n          ...habit,\n          ...updatedHabit\n        };\n      }\n      return habit;\n    }));\n    setEditingHabit(null); // Exit editing mode\n  };\n\n  // Function to start editing a habit\n  const startEditing = habit => {\n    setEditingHabit(habit);\n  };\n\n  // Function to request notification permission\n  const requestNotificationPermission = () => {\n    if ('Notification' in window) {\n      Notification.requestPermission().then(permission => {\n        if (permission === 'granted') {\n          console.log('Notification permission granted.');\n          // You could potentially show a welcome notification here\n        } else if (permission === 'denied') {\n          console.warn('Notification permission denied.');\n        }\n      }).catch(error => {\n        console.error('Error requesting notification permission:', error);\n      });\n    } else {\n      console.warn('Browser does not support notifications.');\n    }\n  };\n  const generateHeatmapData = (habits, selectedTimeRange) => {\n    const today = new Date();\n    let startDate = new Date(today);\n    let endDate = new Date(today);\n    let numberOfDays = 30;\n    switch (selectedTimeRange) {\n      case '7days':\n        startDate.setDate(today.getDate() - 6);\n        numberOfDays = 7;\n        break;\n      case '30days':\n        startDate.setDate(today.getDate() - 29);\n        numberOfDays = 30;\n        break;\n      case 'oneyear':\n        startDate.setFullYear(today.getFullYear() - 1);\n        // For a year, calculate the number of days accurately\n        const timeDiff = Math.abs(endDate.getTime() - startDate.getTime());\n        numberOfDays = Math.ceil(timeDiff / (1000 * 60 * 60 * 24)) + 1; // Include both start and end day\n        break;\n      // Add cases for 'custom' range if needed\n      default:\n        startDate.setDate(today.getDate() - 29);\n        numberOfDays = 30;\n    }\n    const dates = [];\n    const dateMap = {};\n    for (let i = 0; i < numberOfDays; i++) {\n      const date = new Date(startDate);\n      date.setDate(startDate.getDate() + i);\n      const dateString = date.toISOString().split('T')[0];\n      dates.push(dateString);\n      dateMap[dateString] = i;\n    }\n    const heatmapData = habits.map(habit => {\n      const row = new Array(numberOfDays).fill(0); // Initialize row with 0s based on numberOfDays\n      habit.completionDates.forEach(completionDate => {\n        const dateIndex = dateMap[completionDate];\n        if (dateIndex !== undefined) {\n          row[dateIndex] = 1;\n        }\n      });\n      return row;\n    });\n    return {\n      data: heatmapData,\n      dates: dates\n    }; // Return full dates instead of shortened ones\n  };\n  const calculateStreak = habit => {\n    if (!habit.completionDates || habit.completionDates.length === 0) {\n      return 0; // No completions, so no streak\n    }\n\n    // Sort completion dates in ascending order\n    const sortedCompletionDates = habit.completionDates.sort((a, b) => new Date(a) - new Date(b));\n    let currentStreak = 0;\n    let today = new Date();\n    today.setHours(0, 0, 0, 0); // Set time to midnight for accurate date comparison\n\n    // Check if the habit was completed yesterday or today\n    const yesterday = new Date(today);\n    yesterday.setDate(today.getDate() - 1);\n    const latestCompletionDate = new Date(sortedCompletionDates[sortedCompletionDates.length - 1]);\n    latestCompletionDate.setHours(0, 0, 0, 0);\n    const isCompletedToday = latestCompletionDate.getTime() === today.getTime();\n    const isCompletedYesterday = latestCompletionDate.getTime() === yesterday.getTime();\n    if (isCompletedToday || isCompletedYesterday) {\n      currentStreak = isCompletedToday ? 1 : 0; // Start streak calculation if completed today or yesterday\n\n      // Iterate backward from the second to last completion date\n      for (let i = sortedCompletionDates.length - (isCompletedToday ? 2 : 1); i >= 0; i--) {\n        const currentDate = new Date(sortedCompletionDates[i]);\n        currentDate.setHours(0, 0, 0, 0);\n        const previousDate = new Date(sortedCompletionDates[i + 1]);\n        previousDate.setHours(0, 0, 0, 0);\n\n        // Calculate the difference in days\n        const timeDiff = Math.abs(previousDate.getTime() - currentDate.getTime());\n        const diffDays = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n        if (diffDays === 1) {\n          currentStreak++; // Consecutive day\n        } else if (diffDays > 1) {\n          break; // Gap in streak\n        }\n        // If diffDays is 0, it's a duplicate date, continue\n      }\n    }\n    return currentStreak;\n  };\n  const generateChartData = (habits, selectedTimeRange) => {\n    const today = new Date();\n    let startDate = new Date(today);\n    let endDate = new Date(today);\n    switch (selectedTimeRange) {\n      case '7days':\n        startDate.setDate(today.getDate() - 6);\n        break;\n      case '30days':\n        startDate.setDate(today.getDate() - 29);\n        break;\n      case 'oneyear':\n        startDate.setFullYear(today.getFullYear() - 1);\n        break;\n      // Add cases for 'custom' range if needed\n      default:\n        startDate.setDate(today.getDate() - 29);\n    }\n\n    // Format dates for comparison (YYYY-MM-DD)\n    const formattedStartDate = startDate.toISOString().split('T')[0];\n    const formattedEndDate = endDate.toISOString().split('T')[0];\n    const chartData = habits.map(habit => {\n      // Count completions within the selected time range\n      const completionCount = habit.completionDates.filter(date => {\n        // Check if the completion date is within the selected range\n        return date >= formattedStartDate && date <= formattedEndDate;\n      }).length;\n      return {\n        name: habit.name,\n        completions: completionCount\n      };\n    });\n    return chartData;\n  };\n  const generateTrendChartData = (habits, selectedTimeRange) => {\n    const today = new Date();\n    let startDate = new Date(today);\n    let endDate = new Date(today);\n    let numberOfDays = 30; // Default for 30 days\n\n    switch (selectedTimeRange) {\n      case '7days':\n        startDate.setDate(today.getDate() - 6);\n        numberOfDays = 7;\n        break;\n      case '30days':\n        startDate.setDate(today.getDate() - 29);\n        numberOfDays = 30;\n        break;\n      case 'oneyear':\n        startDate.setFullYear(today.getFullYear() - 1);\n        // For a year, calculate the number of days accurately\n        const timeDiff = Math.abs(endDate.getTime() - startDate.getTime());\n        numberOfDays = Math.ceil(timeDiff / (1000 * 60 * 60 * 24)) + 1; // Include both start and end day\n        break;\n      // Add cases for 'custom' range if needed\n      default:\n        startDate.setDate(today.getDate() - 29);\n        numberOfDays = 30;\n    }\n    const dateDataMap = {}; // Map dates to total completions on that day\n\n    // Initialize dateDataMap with all dates in the range and 0 completions\n    for (let i = 0; i < numberOfDays; i++) {\n      const date = new Date(startDate);\n      date.setDate(startDate.getDate() + i);\n      const dateString = date.toISOString().split('T')[0];\n      dateDataMap[dateString] = {\n        date: dateString.slice(5),\n        completions: 0\n      }; // Use shortened date for label\n    }\n\n    // Count total completions per day across all habits\n    habits.forEach(habit => {\n      habit.completionDates.forEach(completionDate => {\n        // Check if the completion date is within the selected range\n        if (completionDate >= startDate.toISOString().split('T')[0] && completionDate <= endDate.toISOString().split('T')[0]) {\n          if (dateDataMap[completionDate]) {\n            dateDataMap[completionDate].completions++;\n          }\n        }\n      });\n    });\n\n    // Convert dateDataMap to an array sorted by date\n    const trendChartData = Object.values(dateDataMap).sort((a, b) => new Date(a.date) - new Date(b.date));\n    return trendChartData;\n  };\n  const generatePieChartData = (habits, selectedTimeRange) => {\n    const today = new Date();\n    let startDate = new Date(today);\n    let endDate = new Date(today);\n    let numberOfDays = 0; // To calculate total possible completions\n\n    switch (selectedTimeRange) {\n      case '7days':\n        startDate.setDate(today.getDate() - 6);\n        numberOfDays = 7;\n        break;\n      case '30days':\n        startDate.setDate(today.getDate() - 29);\n        numberOfDays = 30;\n        break;\n      case 'oneyear':\n        startDate.setFullYear(today.getFullYear() - 1);\n        const timeDiff = Math.abs(endDate.getTime() - startDate.getTime());\n        numberOfDays = Math.ceil(timeDiff / (1000 * 60 * 60 * 24)) + 1;\n        break;\n      // Add cases for 'custom' range if needed\n      default:\n        startDate.setDate(today.getDate() - 29);\n        numberOfDays = 30;\n    }\n\n    // Format dates for comparison (YYYY-MM-DD)\n    const formattedStartDate = startDate.toISOString().split('T')[0];\n    const formattedEndDate = endDate.toISOString().split('T')[0];\n    let totalCompletions = 0;\n    let totalPossibleCompletions = 0;\n    habits.forEach(habit => {\n      // Count completions within the selected time range\n      const completionsInRange = habit.completionDates.filter(date => {\n        return date >= formattedStartDate && date <= formattedEndDate;\n      }).length;\n      totalCompletions += completionsInRange;\n\n      // For simplicity, assuming all habits are daily for calculating possible completions in the range.\n      // In a real app, you would consider habit frequency and creation date.\n      totalPossibleCompletions += numberOfDays;\n    });\n    const totalUncompleted = totalPossibleCompletions - totalCompletions;\n    const pieChartData = [{\n      name: 'Completed',\n      value: totalCompletions\n    }, {\n      name: 'Not Completed',\n      value: totalUncompleted > 0 ? totalUncompleted : 0\n    } // Ensure non-negative\n    ];\n    return pieChartData;\n  };\n  const habitsWithStreaks = useMemo(() => {\n    return habits.map(habit => ({\n      ...habit,\n      streak: calculateStreak(habit)\n    }));\n  }, [habits]);\n  const heatmapData = useMemo(() => generateHeatmapData(habits, selectedTimeRange), [habits, selectedTimeRange]);\n  const chartData = useMemo(() => generateChartData(habits, selectedTimeRange), [habits, selectedTimeRange]); // Generate bar chart data\n  const trendChartData = useMemo(() => generateTrendChartData(habits, selectedTimeRange), [habits, selectedTimeRange]); // Generate trend chart data\n  const pieChartData = useMemo(() => generatePieChartData(habits, selectedTimeRange), [habits, selectedTimeRange]); // Generate pie chart data\n\n  const pageVariants = {\n    initial: {\n      opacity: 0,\n      y: 20\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    exit: {\n      opacity: 0,\n      y: -20\n    }\n  };\n  const cardVariants = {\n    initial: {\n      opacity: 0,\n      y: 20\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    hover: {\n      y: -5,\n      transition: {\n        duration: 0.2\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 transition-colors duration-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 z-0 opacity-20 dark:opacity-10\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-full h-full\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n            children: /*#__PURE__*/_jsxDEV(\"pattern\", {\n              id: \"pattern\",\n              x: \"0\",\n              y: \"0\",\n              width: \"40\",\n              height: \"40\",\n              patternUnits: \"userSpaceOnUse\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M0 0h40v40H0z\",\n                fill: \"none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: \"20\",\n                cy: \"20\",\n                r: \"2\",\n                fill: \"currentColor\",\n                className: \"text-gray-900 dark:text-gray-200\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n            width: \"100%\",\n            height: \"100%\",\n            fill: \"url(#pattern)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative z-10\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n          children: [/*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: -20\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            className: \"flex justify-between items-center mb-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-4xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-500\",\n              children: \"Habit Tracker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TimeRangeSelector, {\n              selectedTimeRange: selectedTimeRange,\n              onTimeRangeChange: setSelectedTimeRange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-8\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"flex space-x-4 bg-white dark:bg-gray-800 p-2 rounded-lg shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(motion.button, {\n                whileHover: {\n                  scale: 1.05\n                },\n                whileTap: {\n                  scale: 0.95\n                },\n                onClick: () => setActiveTab('habits'),\n                className: `px-4 py-2 rounded-lg font-medium transition-colors duration-200 ${activeTab === 'habits' ? 'bg-blue-500 text-white' : 'text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white'}`,\n                children: \"Habits\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n                whileHover: {\n                  scale: 1.05\n                },\n                whileTap: {\n                  scale: 0.95\n                },\n                onClick: () => setActiveTab('statistics'),\n                className: `px-4 py-2 rounded-lg font-medium transition-colors duration-200 ${activeTab === 'statistics' ? 'bg-blue-500 text-white' : 'text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white'}`,\n                children: \"Statistics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            mode: \"wait\",\n            children: /*#__PURE__*/_jsxDEV(motion.div, {\n              variants: pageVariants,\n              initial: \"initial\",\n              animate: \"animate\",\n              exit: \"exit\",\n              transition: {\n                duration: 0.2\n              },\n              children: activeTab === 'habits' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid gap-8 grid-cols-1 lg:grid-cols-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-8\",\n                  children: [/*#__PURE__*/_jsxDEV(motion.div, {\n                    variants: cardVariants,\n                    whileHover: \"hover\",\n                    children: /*#__PURE__*/_jsxDEV(HabitForm, {\n                      onAddHabit: addHabit,\n                      editingHabit: editingHabit,\n                      onEditHabitSubmit: handleEditHabitSubmit\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n                    variants: cardVariants,\n                    whileHover: \"hover\",\n                    children: /*#__PURE__*/_jsxDEV(HabitList, {\n                      habits: habits,\n                      onToggleComplete: toggleHabitComplete,\n                      onDeleteHabit: deleteHabit,\n                      onEditHabit: startEditing\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n                    variants: cardVariants,\n                    whileHover: \"hover\",\n                    children: /*#__PURE__*/_jsxDEV(AchievementBadges, {\n                      habits: habits\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-8\",\n                  children: [/*#__PURE__*/_jsxDEV(motion.div, {\n                    variants: cardVariants,\n                    whileHover: \"hover\",\n                    className: \"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 transform transition-all duration-200\",\n                    children: /*#__PURE__*/_jsxDEV(HabitHeatmap, {\n                      data: heatmapData.data,\n                      dates: heatmapData.dates,\n                      habitLabels: habits.map(h => h.name)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n                    variants: cardVariants,\n                    whileHover: \"hover\",\n                    className: \"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 transform transition-all duration-200\",\n                    children: /*#__PURE__*/_jsxDEV(HabitCompletionChart, {\n                      data: chartData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 524,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n                    variants: cardVariants,\n                    whileHover: \"hover\",\n                    className: \"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 transform transition-all duration-200\",\n                    children: /*#__PURE__*/_jsxDEV(HabitTrendChart, {\n                      data: trendChartData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n                    variants: cardVariants,\n                    whileHover: \"hover\",\n                    className: \"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 transform transition-all duration-200\",\n                    children: /*#__PURE__*/_jsxDEV(HabitPieChart, {\n                      data: pieChartData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 540,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(motion.div, {\n                variants: cardVariants,\n                whileHover: \"hover\",\n                children: /*#__PURE__*/_jsxDEV(StatisticsDashboard, {\n                  habits: habits,\n                  selectedTimeRange: selectedTimeRange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 19\n              }, this)\n            }, activeTab, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemeToggle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dnjxlXLqvANDV6pyLoYSl8CfJXQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","HabitForm","HabitList","HabitHeatmap","HabitCompletionChart","HabitTrendChart","HabitPieChart","ThemeToggle","TimeRangeSelector","AchievementBadges","StatisticsDashboard","ThemeProvider","motion","AnimatePresence","jsxDEV","_jsxDEV","App","_s","habits","setHabits","editingHabit","setEditingHabit","selectedTimeRange","setSelectedTimeRange","activeTab","setActiveTab","savedHabits","localStorage","getItem","JSON","parse","setItem","stringify","notificationTimers","forEach","habit","reminderTime","hours","minutes","split","map","Number","now","Date","reminderDate","getFullYear","getMonth","getDate","getTime","setDate","timeUntilReminder","timerId","setTimeout","Notification","permission","name","body","id","Object","values","clearTimeout","addHabit","completed","completionDates","toggleHabitComplete","today","toISOString","updatedCompletionDates","filter","date","deleteHabit","handleEditHabitSubmit","updatedHabit","startEditing","requestNotificationPermission","window","requestPermission","then","console","log","warn","catch","error","generateHeatmapData","startDate","endDate","numberOfDays","setFullYear","timeDiff","Math","abs","ceil","dates","dateMap","i","dateString","push","heatmapData","row","Array","fill","completionDate","dateIndex","undefined","data","calculateStreak","length","sortedCompletionDates","sort","a","b","currentStreak","setHours","yesterday","latestCompletionDate","isCompletedToday","isCompletedYesterday","currentDate","previousDate","diffDays","generateChartData","formattedStartDate","formattedEndDate","chartData","completionCount","completions","generateTrendChartData","dateDataMap","slice","trendChartData","generatePieChartData","totalCompletions","totalPossibleCompletions","completionsInRange","totalUncompleted","pieChartData","value","habitsWithStreaks","streak","pageVariants","initial","opacity","y","animate","exit","cardVariants","hover","transition","duration","children","className","xmlns","x","width","height","patternUnits","d","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","r","div","onTimeRangeChange","button","whileHover","scale","whileTap","onClick","mode","variants","onAddHabit","onEditHabitSubmit","onToggleComplete","onDeleteHabit","onEditHabit","habitLabels","h","_c","$RefreshReg$"],"sources":["C:/lokesh/habit/habit-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport HabitForm from './components/HabitForm';\nimport HabitList from './components/HabitList';\nimport HabitHeatmap from './components/HabitHeatmap';\nimport HabitCompletionChart from './components/HabitCompletionChart';\nimport HabitTrendChart from './components/HabitTrendChart';\nimport HabitPieChart from './components/HabitPieChart';\nimport ThemeToggle from './components/ThemeToggle';\nimport TimeRangeSelector from './components/TimeRangeSelector';\nimport AchievementBadges from './components/AchievementBadges';\nimport StatisticsDashboard from './components/StatisticsDashboard';\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nfunction App() {\n  const [habits, setHabits] = useState([]); // State to hold the list of habits\n  const [editingHabit, setEditingHabit] = useState(null); // State to hold the habit being edited\n  const [selectedTimeRange, setSelectedTimeRange] = useState('30days'); // State to track selected time range\n  const [activeTab, setActiveTab] = useState('habits'); // New state for tab management\n\n  // Effect to load habits from local storage on initial mount\n  useEffect(() => {\n    const savedHabits = localStorage.getItem('habits');\n    if (savedHabits) {\n      setHabits(JSON.parse(savedHabits));\n    }\n  }, []); // The empty dependency array ensures this effect runs only once on mount\n\n  // Effect to save habits to local storage whenever the 'habits' state changes\n  useEffect(() => {\n    localStorage.setItem('habits', JSON.stringify(habits));\n  }, [habits]); // This effect runs whenever the 'habits' state changes\n\n  // Effect to schedule browser notifications\n  useEffect(() => {\n    const notificationTimers = {}; // To store timer IDs for cleanup\n\n    habits.forEach(habit => {\n      if (habit.reminderTime) {\n        const [hours, minutes] = habit.reminderTime.split(':').map(Number);\n        const now = new Date();\n        const reminderDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), hours, minutes, 0);\n\n        // If the reminder time for today has already passed, schedule for tomorrow\n        if (reminderDate.getTime() < now.getTime()) {\n          reminderDate.setDate(reminderDate.getDate() + 1);\n        }\n\n        const timeUntilReminder = reminderDate.getTime() - now.getTime();\n\n        if (timeUntilReminder >= 0) {\n          const timerId = setTimeout(() => {\n            // Display the notification\n            if (Notification.permission === 'granted') {\n              new Notification(`Habit Reminder: ${habit.name}`, {\n                body: `Time to complete your habit: ${habit.name}`,\n                // You can add more options here, like an icon\n                // icon: '/path/to/icon.png'\n              });\n            }\n          }, timeUntilReminder);\n\n          // Store the timer ID for cleanup\n          notificationTimers[habit.id] = timerId;\n        }\n      }\n    });\n\n    // Cleanup function to clear timers\n    return () => {\n      Object.values(notificationTimers).forEach(timerId => {\n        clearTimeout(timerId);\n      });\n    };\n  }, [habits]); // This effect runs whenever the 'habits' state changes\n\n\n  // Function to add a new habit to the state\n  const addHabit = (habit) => {\n    setHabits([...habits, { id: Date.now(), ...habit, completed: false, completionDates: [], reminderTime: null }]); // Added reminderTime\n  };\n\n  const toggleHabitComplete = (id) => {\n    setHabits(habits.map(habit => {\n      if (habit.id === id) {\n        const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format\n        const updatedCompletionDates = habit.completed\n          ? habit.completionDates.filter(date => date !== today) // Remove today if marking incomplete\n          : [...habit.completionDates, today]; // Add today if marking complete\n\n        return { ...habit, completed: !habit.completed, completionDates: updatedCompletionDates };\n      }\n      return habit;\n    }));\n  };\n\n  const deleteHabit = (id) => {\n    setHabits(habits.filter(habit => habit.id !== id));\n  };\n\n  const handleEditHabitSubmit = (updatedHabit) => {\n    setHabits(habits.map(habit => {\n      if (habit.id === updatedHabit.id) {\n        return { ...habit, ...updatedHabit };\n      }\n      return habit;\n    }));\n    setEditingHabit(null); // Exit editing mode\n  };\n\n  // Function to start editing a habit\n  const startEditing = (habit) => {\n    setEditingHabit(habit);\n  };\n\n  // Function to request notification permission\n  const requestNotificationPermission = () => {\n    if ('Notification' in window) {\n      Notification.requestPermission()\n        .then(permission => {\n          if (permission === 'granted') {\n            console.log('Notification permission granted.');\n            // You could potentially show a welcome notification here\n          } else if (permission === 'denied') {\n            console.warn('Notification permission denied.');\n          }\n        })\n        .catch(error => {\n          console.error('Error requesting notification permission:', error);\n        });\n    } else {\n      console.warn('Browser does not support notifications.');\n    }\n  };\n\n\n  const generateHeatmapData = (habits, selectedTimeRange) => {\n    const today = new Date();\n    let startDate = new Date(today);\n    let endDate = new Date(today);\n    let numberOfDays = 30;\n\n    switch (selectedTimeRange) {\n      case '7days':\n        startDate.setDate(today.getDate() - 6);\n        numberOfDays = 7;\n        break;\n      case '30days':\n        startDate.setDate(today.getDate() - 29);\n        numberOfDays = 30;\n        break;\n      case 'oneyear':\n        startDate.setFullYear(today.getFullYear() - 1);\n        // For a year, calculate the number of days accurately\n        const timeDiff = Math.abs(endDate.getTime() - startDate.getTime());\n        numberOfDays = Math.ceil(timeDiff / (1000 * 60 * 60 * 24)) + 1; // Include both start and end day\n        break;\n      // Add cases for 'custom' range if needed\n      default:\n        startDate.setDate(today.getDate() - 29);\n        numberOfDays = 30;\n    }\n\n    const dates = [];\n    const dateMap = {};\n    for (let i = 0; i < numberOfDays; i++) {\n      const date = new Date(startDate);\n      date.setDate(startDate.getDate() + i);\n      const dateString = date.toISOString().split('T')[0];\n      dates.push(dateString);\n      dateMap[dateString] = i;\n    }\n\n    const heatmapData = habits.map(habit => {\n      const row = new Array(numberOfDays).fill(0); // Initialize row with 0s based on numberOfDays\n      habit.completionDates.forEach(completionDate => {\n        const dateIndex = dateMap[completionDate];\n        if (dateIndex !== undefined) {\n          row[dateIndex] = 1;\n        }\n      });\n      return row;\n    });\n\n    return { data: heatmapData, dates: dates }; // Return full dates instead of shortened ones\n  };\n\n  const calculateStreak = (habit) => {\n    if (!habit.completionDates || habit.completionDates.length === 0) {\n      return 0; // No completions, so no streak\n    }\n\n    // Sort completion dates in ascending order\n    const sortedCompletionDates = habit.completionDates.sort((a, b) => new Date(a) - new Date(b));\n\n    let currentStreak = 0;\n    let today = new Date();\n    today.setHours(0, 0, 0, 0); // Set time to midnight for accurate date comparison\n\n    // Check if the habit was completed yesterday or today\n    const yesterday = new Date(today);\n    yesterday.setDate(today.getDate() - 1);\n\n    const latestCompletionDate = new Date(sortedCompletionDates[sortedCompletionDates.length - 1]);\n    latestCompletionDate.setHours(0, 0, 0, 0);\n\n    const isCompletedToday = latestCompletionDate.getTime() === today.getTime();\n    const isCompletedYesterday = latestCompletionDate.getTime() === yesterday.getTime();\n\n    if (isCompletedToday || isCompletedYesterday) {\n      currentStreak = isCompletedToday ? 1 : 0; // Start streak calculation if completed today or yesterday\n\n      // Iterate backward from the second to last completion date\n      for (let i = sortedCompletionDates.length - (isCompletedToday ? 2 : 1); i >= 0; i--) {\n        const currentDate = new Date(sortedCompletionDates[i]);\n        currentDate.setHours(0, 0, 0, 0);\n\n        const previousDate = new Date(sortedCompletionDates[i + 1]);\n        previousDate.setHours(0, 0, 0, 0);\n\n        // Calculate the difference in days\n        const timeDiff = Math.abs(previousDate.getTime() - currentDate.getTime());\n        const diffDays = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n\n        if (diffDays === 1) {\n          currentStreak++; // Consecutive day\n        } else if (diffDays > 1) {\n          break; // Gap in streak\n        }\n        // If diffDays is 0, it's a duplicate date, continue\n      }\n    }\n\n    return currentStreak;\n  };\n\n  const generateChartData = (habits, selectedTimeRange) => {\n    const today = new Date();\n    let startDate = new Date(today);\n    let endDate = new Date(today);\n\n    switch (selectedTimeRange) {\n      case '7days':\n        startDate.setDate(today.getDate() - 6);\n        break;\n      case '30days':\n        startDate.setDate(today.getDate() - 29);\n        break;\n      case 'oneyear':\n        startDate.setFullYear(today.getFullYear() - 1);\n        break;\n      // Add cases for 'custom' range if needed\n      default:\n        startDate.setDate(today.getDate() - 29);\n    }\n\n    // Format dates for comparison (YYYY-MM-DD)\n    const formattedStartDate = startDate.toISOString().split('T')[0];\n    const formattedEndDate = endDate.toISOString().split('T')[0];\n\n    const chartData = habits.map(habit => {\n      // Count completions within the selected time range\n      const completionCount = habit.completionDates.filter(date => {\n        // Check if the completion date is within the selected range\n        return date >= formattedStartDate && date <= formattedEndDate;\n      }).length;\n\n      return {\n        name: habit.name,\n        completions: completionCount,\n      };\n    });\n\n    return chartData;\n  };\n\n  const generateTrendChartData = (habits, selectedTimeRange) => {\n    const today = new Date();\n    let startDate = new Date(today);\n    let endDate = new Date(today);\n    let numberOfDays = 30; // Default for 30 days\n\n    switch (selectedTimeRange) {\n      case '7days':\n        startDate.setDate(today.getDate() - 6);\n        numberOfDays = 7;\n        break;\n      case '30days':\n        startDate.setDate(today.getDate() - 29);\n        numberOfDays = 30;\n        break;\n      case 'oneyear':\n        startDate.setFullYear(today.getFullYear() - 1);\n        // For a year, calculate the number of days accurately\n        const timeDiff = Math.abs(endDate.getTime() - startDate.getTime());\n        numberOfDays = Math.ceil(timeDiff / (1000 * 60 * 60 * 24)) + 1; // Include both start and end day\n        break;\n      // Add cases for 'custom' range if needed\n      default:\n        startDate.setDate(today.getDate() - 29);\n        numberOfDays = 30;\n    }\n\n    const dateDataMap = {}; // Map dates to total completions on that day\n\n    // Initialize dateDataMap with all dates in the range and 0 completions\n    for (let i = 0; i < numberOfDays; i++) {\n      const date = new Date(startDate);\n      date.setDate(startDate.getDate() + i);\n      const dateString = date.toISOString().split('T')[0];\n      dateDataMap[dateString] = { date: dateString.slice(5), completions: 0 }; // Use shortened date for label\n    }\n\n    // Count total completions per day across all habits\n    habits.forEach(habit => {\n      habit.completionDates.forEach(completionDate => {\n        // Check if the completion date is within the selected range\n        if (completionDate >= startDate.toISOString().split('T')[0] && completionDate <= endDate.toISOString().split('T')[0]) {\n          if (dateDataMap[completionDate]) {\n            dateDataMap[completionDate].completions++;\n          }\n        }\n      });\n    });\n\n    // Convert dateDataMap to an array sorted by date\n    const trendChartData = Object.values(dateDataMap).sort((a, b) => new Date(a.date) - new Date(b.date));\n\n    return trendChartData;\n  };\n\n  const generatePieChartData = (habits, selectedTimeRange) => {\n    const today = new Date();\n    let startDate = new Date(today);\n    let endDate = new Date(today);\n    let numberOfDays = 0; // To calculate total possible completions\n\n    switch (selectedTimeRange) {\n      case '7days':\n        startDate.setDate(today.getDate() - 6);\n        numberOfDays = 7;\n        break;\n      case '30days':\n        startDate.setDate(today.getDate() - 29);\n        numberOfDays = 30;\n        break;\n      case 'oneyear':\n        startDate.setFullYear(today.getFullYear() - 1);\n        const timeDiff = Math.abs(endDate.getTime() - startDate.getTime());\n        numberOfDays = Math.ceil(timeDiff / (1000 * 60 * 60 * 24)) + 1;\n        break;\n      // Add cases for 'custom' range if needed\n      default:\n        startDate.setDate(today.getDate() - 29);\n        numberOfDays = 30;\n    }\n\n    // Format dates for comparison (YYYY-MM-DD)\n    const formattedStartDate = startDate.toISOString().split('T')[0];\n    const formattedEndDate = endDate.toISOString().split('T')[0];\n\n    let totalCompletions = 0;\n    let totalPossibleCompletions = 0;\n\n    habits.forEach(habit => {\n      // Count completions within the selected time range\n      const completionsInRange = habit.completionDates.filter(date => {\n        return date >= formattedStartDate && date <= formattedEndDate;\n      }).length;\n\n      totalCompletions += completionsInRange;\n\n      // For simplicity, assuming all habits are daily for calculating possible completions in the range.\n      // In a real app, you would consider habit frequency and creation date.\n      totalPossibleCompletions += numberOfDays;\n    });\n\n    const totalUncompleted = totalPossibleCompletions - totalCompletions;\n\n    const pieChartData = [\n      { name: 'Completed', value: totalCompletions },\n      { name: 'Not Completed', value: totalUncompleted > 0 ? totalUncompleted : 0 }, // Ensure non-negative\n    ];\n\n    return pieChartData;\n  };\n\n\n  const habitsWithStreaks = useMemo(() => {\n    return habits.map(habit => ({\n      ...habit,\n      streak: calculateStreak(habit),\n    }));\n  }, [habits]);\n\n\n  const heatmapData = useMemo(() => generateHeatmapData(habits, selectedTimeRange), [habits, selectedTimeRange]);\n  const chartData = useMemo(() => generateChartData(habits, selectedTimeRange), [habits, selectedTimeRange]); // Generate bar chart data\n  const trendChartData = useMemo(() => generateTrendChartData(habits, selectedTimeRange), [habits, selectedTimeRange]); // Generate trend chart data\n  const pieChartData = useMemo(() => generatePieChartData(habits, selectedTimeRange), [habits, selectedTimeRange]); // Generate pie chart data\n\n  const pageVariants = {\n    initial: { opacity: 0, y: 20 },\n    animate: { opacity: 1, y: 0 },\n    exit: { opacity: 0, y: -20 }\n  };\n\n  const cardVariants = {\n    initial: { opacity: 0, y: 20 },\n    animate: { opacity: 1, y: 0 },\n    hover: { y: -5, transition: { duration: 0.2 } }\n  };\n\n  return (\n    <ThemeProvider>\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 transition-colors duration-200\">\n        <div className=\"absolute inset-0 z-0 opacity-20 dark:opacity-10\">\n          <svg className=\"w-full h-full\" xmlns=\"http://www.w3.org/2000/svg\">\n            <defs>\n              <pattern id=\"pattern\" x=\"0\" y=\"0\" width=\"40\" height=\"40\" patternUnits=\"userSpaceOnUse\">\n                <path d=\"M0 0h40v40H0z\" fill=\"none\"/>\n                <circle cx=\"20\" cy=\"20\" r=\"2\" fill=\"currentColor\" className=\"text-gray-900 dark:text-gray-200\"/>\n              </pattern>\n            </defs>\n            <rect width=\"100%\" height=\"100%\" fill=\"url(#pattern)\"/>\n          </svg>\n        </div>\n\n        <div className=\"relative z-10\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n            <motion.div\n              initial={{ opacity: 0, y: -20 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"flex justify-between items-center mb-8\"\n            >\n              <h1 className=\"text-4xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-500\">\n                Habit Tracker\n              </h1>\n              <TimeRangeSelector\n                selectedTimeRange={selectedTimeRange}\n                onTimeRangeChange={setSelectedTimeRange}\n              />\n            </motion.div>\n\n            <div className=\"mb-8\">\n              <nav className=\"flex space-x-4 bg-white dark:bg-gray-800 p-2 rounded-lg shadow-sm\">\n                <motion.button\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={() => setActiveTab('habits')}\n                  className={`px-4 py-2 rounded-lg font-medium transition-colors duration-200 ${\n                    activeTab === 'habits'\n                      ? 'bg-blue-500 text-white'\n                      : 'text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white'\n                  }`}\n                >\n                  Habits\n                </motion.button>\n                <motion.button\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={() => setActiveTab('statistics')}\n                  className={`px-4 py-2 rounded-lg font-medium transition-colors duration-200 ${\n                    activeTab === 'statistics'\n                      ? 'bg-blue-500 text-white'\n                      : 'text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white'\n                  }`}\n                >\n                  Statistics\n                </motion.button>\n              </nav>\n            </div>\n\n            <AnimatePresence mode=\"wait\">\n              <motion.div\n                key={activeTab}\n                variants={pageVariants}\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n                transition={{ duration: 0.2 }}\n              >\n                {activeTab === 'habits' ? (\n                  <div className=\"grid gap-8 grid-cols-1 lg:grid-cols-2\">\n                    <div className=\"space-y-8\">\n                      <motion.div variants={cardVariants} whileHover=\"hover\">\n                        <HabitForm\n                          onAddHabit={addHabit}\n                          editingHabit={editingHabit}\n                          onEditHabitSubmit={handleEditHabitSubmit}\n                        />\n                      </motion.div>\n                      <motion.div variants={cardVariants} whileHover=\"hover\">\n                        <HabitList\n                          habits={habits}\n                          onToggleComplete={toggleHabitComplete}\n                          onDeleteHabit={deleteHabit}\n                          onEditHabit={startEditing}\n                        />\n                      </motion.div>\n                      <motion.div variants={cardVariants} whileHover=\"hover\">\n                        <AchievementBadges habits={habits} />\n                      </motion.div>\n                    </div>\n                    \n                    <div className=\"space-y-8\">\n                      <motion.div\n                        variants={cardVariants}\n                        whileHover=\"hover\"\n                        className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 transform transition-all duration-200\"\n                      >\n                        <HabitHeatmap\n                          data={heatmapData.data}\n                          dates={heatmapData.dates}\n                          habitLabels={habits.map(h => h.name)}\n                        />\n                      </motion.div>\n                      \n                      <motion.div\n                        variants={cardVariants}\n                        whileHover=\"hover\"\n                        className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 transform transition-all duration-200\"\n                      >\n                        <HabitCompletionChart data={chartData} />\n                      </motion.div>\n                      \n                      <motion.div\n                        variants={cardVariants}\n                        whileHover=\"hover\"\n                        className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 transform transition-all duration-200\"\n                      >\n                        <HabitTrendChart data={trendChartData} />\n                      </motion.div>\n                      \n                      <motion.div\n                        variants={cardVariants}\n                        whileHover=\"hover\"\n                        className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 transform transition-all duration-200\"\n                      >\n                        <HabitPieChart data={pieChartData} />\n                      </motion.div>\n                    </div>\n                  </div>\n                ) : (\n                  <motion.div variants={cardVariants} whileHover=\"hover\">\n                    <StatisticsDashboard\n                      habits={habits}\n                      selectedTimeRange={selectedTimeRange}\n                    />\n                  </motion.div>\n                )}\n              </motion.div>\n            </AnimatePresence>\n          </div>\n        </div>\n        <ThemeToggle />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}