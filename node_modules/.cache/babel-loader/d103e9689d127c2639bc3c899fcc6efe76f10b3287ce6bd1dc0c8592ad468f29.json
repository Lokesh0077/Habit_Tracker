{"ast":null,"code":"var _jsxFileName = \"C:\\\\lokesh\\\\habit\\\\habit-tracker\\\\src\\\\components\\\\StatisticsDashboard.js\";\nimport React from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar, ScatterChart, Scatter } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticsDashboard = ({\n  habits,\n  selectedTimeRange\n}) => {\n  // Calculate success rate per habit\n  const calculateSuccessRates = () => {\n    return habits.map(habit => {\n      const totalDays = habit.completionDates.length;\n      const successRate = totalDays / getTimeRangeDays(selectedTimeRange) * 100;\n      return {\n        name: habit.name,\n        successRate: Math.round(successRate * 10) / 10,\n        completions: totalDays\n      };\n    });\n  };\n\n  // Calculate best performing days\n  const calculateBestDays = () => {\n    const dayCount = {\n      0: 0,\n      1: 0,\n      2: 0,\n      3: 0,\n      4: 0,\n      5: 0,\n      6: 0\n    };\n    const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    habits.forEach(habit => {\n      habit.completionDates.forEach(date => {\n        const day = new Date(date).getDay();\n        dayCount[day]++;\n      });\n    });\n    return Object.entries(dayCount).map(([day, count]) => ({\n      name: dayNames[parseInt(day)],\n      completions: count\n    }));\n  };\n\n  // Calculate best performing times\n  const calculateBestTimes = () => {\n    const timeSlots = Array.from({\n      length: 24\n    }, (_, i) => ({\n      hour: i,\n      completions: 0\n    }));\n    habits.forEach(habit => {\n      if (habit.reminderTime) {\n        const hour = parseInt(habit.reminderTime.split(':')[0]);\n        timeSlots[hour].completions++;\n      }\n    });\n    return timeSlots.map(slot => ({\n      name: `${slot.hour}:00`,\n      completions: slot.completions\n    }));\n  };\n\n  // Calculate habit correlations\n  const calculateHabitCorrelations = () => {\n    const correlations = [];\n    for (let i = 0; i < habits.length; i++) {\n      for (let j = i + 1; j < habits.length; j++) {\n        const habit1 = habits[i];\n        const habit2 = habits[j];\n        const dates1 = new Set(habit1.completionDates);\n        const dates2 = new Set(habit2.completionDates);\n        const commonDates = [...dates1].filter(date => dates2.has(date));\n        const correlation = commonDates.length / Math.sqrt(dates1.size * dates2.size);\n        correlations.push({\n          x: habit1.name,\n          y: habit2.name,\n          correlation: Math.round(correlation * 100)\n        });\n      }\n    }\n    return correlations;\n  };\n\n  // Helper function to get number of days in selected time range\n  const getTimeRangeDays = range => {\n    switch (range) {\n      case '7days':\n        return 7;\n      case '30days':\n        return 30;\n      case 'oneyear':\n        return 365;\n      default:\n        return 30;\n    }\n  };\n  const successRates = calculateSuccessRates();\n  const bestDays = calculateBestDays();\n  const bestTimes = calculateBestTimes();\n  const correlations = calculateHabitCorrelations();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-6 text-gray-800 dark:text-white\",\n        children: \"Success Rates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-80\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: successRates,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"successRate\",\n              name: \"Success Rate (%)\",\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-6 text-gray-800 dark:text-white\",\n          children: \"Best Performing Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"100%\",\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: bestDays,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"completions\",\n                name: \"Completions\",\n                fill: \"#82ca9d\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-6 text-gray-800 dark:text-white\",\n          children: \"Best Performing Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"100%\",\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: bestTimes,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"completions\",\n                name: \"Completions\",\n                stroke: \"#ffc658\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-6 text-gray-800 dark:text-white\",\n        children: \"Habit Correlations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-80\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"x\",\n              type: \"category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              dataKey: \"y\",\n              type: \"category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              cursor: {\n                strokeDasharray: '3 3'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: correlations,\n              fill: \"#8884d8\",\n              shape: \"circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-sm text-gray-600 dark:text-gray-400\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Correlation strength is represented by circle size. Larger circles indicate stronger correlations between habits.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-6 text-gray-800 dark:text-white\",\n        children: \"Overall Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-80\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(RadarChart, {\n            data: successRates,\n            children: [/*#__PURE__*/_jsxDEV(PolarGrid, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n              dataKey: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PolarRadiusAxis, {\n              angle: 30,\n              domain: [0, 100]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Radar, {\n              name: \"Success Rate\",\n              dataKey: \"successRate\",\n              stroke: \"#8884d8\",\n              fill: \"#8884d8\",\n              fillOpacity: 0.6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_c = StatisticsDashboard;\nexport default StatisticsDashboard;\nvar _c;\n$RefreshReg$(_c, \"StatisticsDashboard\");","map":{"version":3,"names":["React","BarChart","Bar","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","ScatterChart","Scatter","jsxDEV","_jsxDEV","StatisticsDashboard","habits","selectedTimeRange","calculateSuccessRates","map","habit","totalDays","completionDates","length","successRate","getTimeRangeDays","name","Math","round","completions","calculateBestDays","dayCount","dayNames","forEach","date","day","Date","getDay","Object","entries","count","parseInt","calculateBestTimes","timeSlots","Array","from","_","i","hour","reminderTime","split","slot","calculateHabitCorrelations","correlations","j","habit1","habit2","dates1","Set","dates2","commonDates","filter","has","correlation","sqrt","size","push","x","y","range","successRates","bestDays","bestTimes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","strokeDasharray","dataKey","fill","type","stroke","cursor","shape","angle","domain","fillOpacity","_c","$RefreshReg$"],"sources":["C:/lokesh/habit/habit-tracker/src/components/StatisticsDashboard.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  RadarChart,\r\n  PolarGrid,\r\n  PolarAngleAxis,\r\n  PolarRadiusAxis,\r\n  Radar,\r\n  ScatterChart,\r\n  Scatter,\r\n} from 'recharts';\r\n\r\nconst StatisticsDashboard = ({ habits, selectedTimeRange }) => {\r\n  // Calculate success rate per habit\r\n  const calculateSuccessRates = () => {\r\n    return habits.map(habit => {\r\n      const totalDays = habit.completionDates.length;\r\n      const successRate = (totalDays / getTimeRangeDays(selectedTimeRange)) * 100;\r\n      return {\r\n        name: habit.name,\r\n        successRate: Math.round(successRate * 10) / 10,\r\n        completions: totalDays,\r\n      };\r\n    });\r\n  };\r\n\r\n  // Calculate best performing days\r\n  const calculateBestDays = () => {\r\n    const dayCount = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0 };\r\n    const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\n    habits.forEach(habit => {\r\n      habit.completionDates.forEach(date => {\r\n        const day = new Date(date).getDay();\r\n        dayCount[day]++;\r\n      });\r\n    });\r\n\r\n    return Object.entries(dayCount).map(([day, count]) => ({\r\n      name: dayNames[parseInt(day)],\r\n      completions: count,\r\n    }));\r\n  };\r\n\r\n  // Calculate best performing times\r\n  const calculateBestTimes = () => {\r\n    const timeSlots = Array.from({ length: 24 }, (_, i) => ({\r\n      hour: i,\r\n      completions: 0,\r\n    }));\r\n\r\n    habits.forEach(habit => {\r\n      if (habit.reminderTime) {\r\n        const hour = parseInt(habit.reminderTime.split(':')[0]);\r\n        timeSlots[hour].completions++;\r\n      }\r\n    });\r\n\r\n    return timeSlots.map(slot => ({\r\n      name: `${slot.hour}:00`,\r\n      completions: slot.completions,\r\n    }));\r\n  };\r\n\r\n  // Calculate habit correlations\r\n  const calculateHabitCorrelations = () => {\r\n    const correlations = [];\r\n    \r\n    for (let i = 0; i < habits.length; i++) {\r\n      for (let j = i + 1; j < habits.length; j++) {\r\n        const habit1 = habits[i];\r\n        const habit2 = habits[j];\r\n        \r\n        const dates1 = new Set(habit1.completionDates);\r\n        const dates2 = new Set(habit2.completionDates);\r\n        \r\n        const commonDates = [...dates1].filter(date => dates2.has(date));\r\n        const correlation = commonDates.length / Math.sqrt(dates1.size * dates2.size);\r\n        \r\n        correlations.push({\r\n          x: habit1.name,\r\n          y: habit2.name,\r\n          correlation: Math.round(correlation * 100),\r\n        });\r\n      }\r\n    }\r\n    \r\n    return correlations;\r\n  };\r\n\r\n  // Helper function to get number of days in selected time range\r\n  const getTimeRangeDays = (range) => {\r\n    switch (range) {\r\n      case '7days':\r\n        return 7;\r\n      case '30days':\r\n        return 30;\r\n      case 'oneyear':\r\n        return 365;\r\n      default:\r\n        return 30;\r\n    }\r\n  };\r\n\r\n  const successRates = calculateSuccessRates();\r\n  const bestDays = calculateBestDays();\r\n  const bestTimes = calculateBestTimes();\r\n  const correlations = calculateHabitCorrelations();\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\">\r\n        <h3 className=\"text-xl font-bold mb-6 text-gray-800 dark:text-white\">\r\n          Success Rates\r\n        </h3>\r\n        <div className=\"h-80\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart data={successRates}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"successRate\" name=\"Success Rate (%)\" fill=\"#8884d8\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\">\r\n          <h3 className=\"text-xl font-bold mb-6 text-gray-800 dark:text-white\">\r\n            Best Performing Days\r\n          </h3>\r\n          <div className=\"h-80\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <BarChart data={bestDays}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"completions\" name=\"Completions\" fill=\"#82ca9d\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\">\r\n          <h3 className=\"text-xl font-bold mb-6 text-gray-800 dark:text-white\">\r\n            Best Performing Times\r\n          </h3>\r\n          <div className=\"h-80\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <LineChart data={bestTimes}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"completions\"\r\n                  name=\"Completions\"\r\n                  stroke=\"#ffc658\"\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\">\r\n        <h3 className=\"text-xl font-bold mb-6 text-gray-800 dark:text-white\">\r\n          Habit Correlations\r\n        </h3>\r\n        <div className=\"h-80\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <ScatterChart>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"x\" type=\"category\" />\r\n              <YAxis dataKey=\"y\" type=\"category\" />\r\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n              <Scatter\r\n                data={correlations}\r\n                fill=\"#8884d8\"\r\n                shape=\"circle\"\r\n              />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <div className=\"mt-4 text-sm text-gray-600 dark:text-gray-400\">\r\n          <p>Correlation strength is represented by circle size. Larger circles indicate stronger correlations between habits.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\">\r\n        <h3 className=\"text-xl font-bold mb-6 text-gray-800 dark:text-white\">\r\n          Overall Performance\r\n        </h3>\r\n        <div className=\"h-80\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <RadarChart data={successRates}>\r\n              <PolarGrid />\r\n              <PolarAngleAxis dataKey=\"name\" />\r\n              <PolarRadiusAxis angle={30} domain={[0, 100]} />\r\n              <Radar\r\n                name=\"Success Rate\"\r\n                dataKey=\"successRate\"\r\n                stroke=\"#8884d8\"\r\n                fill=\"#8884d8\"\r\n                fillOpacity={0.6}\r\n              />\r\n            </RadarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticsDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}