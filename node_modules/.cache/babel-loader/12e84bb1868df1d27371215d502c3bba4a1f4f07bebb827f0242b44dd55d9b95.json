{"ast":null,"code":"var _jsxFileName = \"C:\\\\lokesh\\\\habit\\\\habit-tracker\\\\src\\\\components\\\\HabitHeatmap.js\";\nimport React from 'react';\nimport HeatMap from '@uiw/react-heat-map';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitHeatmap = ({\n  data,\n  dates,\n  habitLabels\n}) => {\n  // Transform data into the format required by @uiw/react-heat-map\n  const transformData = () => {\n    const heatmapData = [];\n    data.forEach((habitData, habitIndex) => {\n      habitData.forEach((value, dateIndex) => {\n        if (value === 1) {\n          heatmapData.push({\n            date: dates[dateIndex],\n            count: 1,\n            habit: habitLabels[habitIndex]\n          });\n        }\n      });\n    });\n    return heatmapData;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4 text-center\",\n      children: \"Habit Completion Heatmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: data && data.length > 0 && dates && dates.length > 0 && habitLabels && habitLabels.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: habitLabels.map((habit, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: habit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(HeatMap, {\n            value: transformData().filter(d => d.habit === habit),\n            width: 800,\n            height: 100,\n            rectSize: 12,\n            startDate: new Date(dates[0]),\n            endDate: new Date(dates[dates.length - 1]),\n            rectProps: {\n              rx: 2\n            },\n            legendRender: rect => null,\n            rectColor: value => {\n              return value ? '#4CAF50' : '#EEEEEE';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)]\n        }, habit, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-center\",\n        children: \"Add some habits and mark them as done to see the heatmap.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = HabitHeatmap;\nexport default HabitHeatmap;\nvar _c;\n$RefreshReg$(_c, \"HabitHeatmap\");","map":{"version":3,"names":["React","HeatMap","jsxDEV","_jsxDEV","HabitHeatmap","data","dates","habitLabels","transformData","heatmapData","forEach","habitData","habitIndex","value","dateIndex","push","date","count","habit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","filter","d","width","height","rectSize","startDate","Date","endDate","rectProps","rx","legendRender","rect","rectColor","_c","$RefreshReg$"],"sources":["C:/lokesh/habit/habit-tracker/src/components/HabitHeatmap.js"],"sourcesContent":["import React from 'react';\nimport HeatMap from '@uiw/react-heat-map';\n\nconst HabitHeatmap = ({ data, dates, habitLabels }) => {\n  // Transform data into the format required by @uiw/react-heat-map\n  const transformData = () => {\n    const heatmapData = [];\n    data.forEach((habitData, habitIndex) => {\n      habitData.forEach((value, dateIndex) => {\n        if (value === 1) {\n          heatmapData.push({\n            date: dates[dateIndex],\n            count: 1,\n            habit: habitLabels[habitIndex]\n          });\n        }\n      });\n    });\n    return heatmapData;\n  };\n\n  return (\n    <div className=\"mt-8\">\n      <h2 className=\"text-xl font-bold mb-4 text-center\">Habit Completion Heatmap</h2>\n      <div className=\"overflow-x-auto\">\n        {data && data.length > 0 && dates && dates.length > 0 && habitLabels && habitLabels.length > 0 ? (\n          <div className=\"space-y-4\">\n            {habitLabels.map((habit, index) => (\n              <div key={habit} className=\"bg-white p-4 rounded-lg\">\n                <h3 className=\"text-lg font-semibold mb-2\">{habit}</h3>\n                <HeatMap\n                  value={transformData().filter(d => d.habit === habit)}\n                  width={800}\n                  height={100}\n                  rectSize={12}\n                  startDate={new Date(dates[0])}\n                  endDate={new Date(dates[dates.length - 1])}\n                  rectProps={{\n                    rx: 2,\n                  }}\n                  legendRender={rect => null}\n                  rectColor={value => {\n                    return value ? '#4CAF50' : '#EEEEEE';\n                  }}\n                />\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p className=\"text-gray-500 text-center\">Add some habits and mark them as done to see the heatmap.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HabitHeatmap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}